/*
* generated by Xtext
*/
grammar InternalTypes;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.spp.cocome.types.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.spp.cocome.types.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.spp.cocome.types.services.TypesGrammarAccess;

}

@parser::members {
 
 	private TypesGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(TypesGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleNamedType
entryRuleNamedType 
:
{ before(grammarAccess.getNamedTypeRule()); }
	 ruleNamedType
{ after(grammarAccess.getNamedTypeRule()); } 
	 EOF 
;

// Rule NamedType
ruleNamedType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedTypeAccess().getAlternatives()); }
(rule__NamedType__Alternatives)
{ after(grammarAccess.getNamedTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCollectionType
entryRuleCollectionType 
:
{ before(grammarAccess.getCollectionTypeRule()); }
	 ruleCollectionType
{ after(grammarAccess.getCollectionTypeRule()); } 
	 EOF 
;

// Rule CollectionType
ruleCollectionType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCollectionTypeAccess().getGroup()); }
(rule__CollectionType__Group__0)
{ after(grammarAccess.getCollectionTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMapType
entryRuleMapType 
:
{ before(grammarAccess.getMapTypeRule()); }
	 ruleMapType
{ after(grammarAccess.getMapTypeRule()); } 
	 EOF 
;

// Rule MapType
ruleMapType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMapTypeAccess().getGroup()); }
(rule__MapType__Group__0)
{ after(grammarAccess.getMapTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclarationTypeReference
entryRuleDeclarationTypeReference 
:
{ before(grammarAccess.getDeclarationTypeReferenceRule()); }
	 ruleDeclarationTypeReference
{ after(grammarAccess.getDeclarationTypeReferenceRule()); } 
	 EOF 
;

// Rule DeclarationTypeReference
ruleDeclarationTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationTypeReferenceAccess().getAlternatives()); }
(rule__DeclarationTypeReference__Alternatives)
{ after(grammarAccess.getDeclarationTypeReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeReference
entryRuleTypeReference 
:
{ before(grammarAccess.getTypeReferenceRule()); }
	 ruleTypeReference
{ after(grammarAccess.getTypeReferenceRule()); } 
	 EOF 
;

// Rule TypeReference
ruleTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeReferenceAccess().getReferenceAssignment()); }
(rule__TypeReference__ReferenceAssignment)
{ after(grammarAccess.getTypeReferenceAccess().getReferenceAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimitiveType
entryRulePrimitiveType 
:
{ before(grammarAccess.getPrimitiveTypeRule()); }
	 rulePrimitiveType
{ after(grammarAccess.getPrimitiveTypeRule()); } 
	 EOF 
;

// Rule PrimitiveType
rulePrimitiveType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getNameAssignment()); }
(rule__PrimitiveType__NameAssignment)
{ after(grammarAccess.getPrimitiveTypeAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComplexType
entryRuleComplexType 
:
{ before(grammarAccess.getComplexTypeRule()); }
	 ruleComplexType
{ after(grammarAccess.getComplexTypeRule()); } 
	 EOF 
;

// Rule ComplexType
ruleComplexType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComplexTypeAccess().getAlternatives()); }
(rule__ComplexType__Alternatives)
{ after(grammarAccess.getComplexTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumerationType
entryRuleEnumerationType 
:
{ before(grammarAccess.getEnumerationTypeRule()); }
	 ruleEnumerationType
{ after(grammarAccess.getEnumerationTypeRule()); } 
	 EOF 
;

// Rule EnumerationType
ruleEnumerationType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumerationTypeAccess().getGroup()); }
(rule__EnumerationType__Group__0)
{ after(grammarAccess.getEnumerationTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumerationLiteral
entryRuleEnumerationLiteral 
:
{ before(grammarAccess.getEnumerationLiteralRule()); }
	 ruleEnumerationLiteral
{ after(grammarAccess.getEnumerationLiteralRule()); } 
	 EOF 
;

// Rule EnumerationLiteral
ruleEnumerationLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumerationLiteralAccess().getNameAssignment()); }
(rule__EnumerationLiteral__NameAssignment)
{ after(grammarAccess.getEnumerationLiteralAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntityType
entryRuleEntityType 
:
{ before(grammarAccess.getEntityTypeRule()); }
	 ruleEntityType
{ after(grammarAccess.getEntityTypeRule()); } 
	 EOF 
;

// Rule EntityType
ruleEntityType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityTypeAccess().getGroup()); }
(rule__EntityType__Group__0)
{ after(grammarAccess.getEntityTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty 
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccess().getGroup()); }
(rule__Property__Group__0)
{ after(grammarAccess.getPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntityRelationship
entryRuleEntityRelationship 
:
{ before(grammarAccess.getEntityRelationshipRule()); }
	 ruleEntityRelationship
{ after(grammarAccess.getEntityRelationshipRule()); } 
	 EOF 
;

// Rule EntityRelationship
ruleEntityRelationship
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityRelationshipAccess().getGroup()); }
(rule__EntityRelationship__Group__0)
{ after(grammarAccess.getEntityRelationshipAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMappedByReference
entryRuleMappedByReference 
:
{ before(grammarAccess.getMappedByReferenceRule()); }
	 ruleMappedByReference
{ after(grammarAccess.getMappedByReferenceRule()); } 
	 EOF 
;

// Rule MappedByReference
ruleMappedByReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMappedByReferenceAccess().getGroup()); }
(rule__MappedByReference__Group__0)
{ after(grammarAccess.getMappedByReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
(rule__StringLiteral__ValueAssignment)
{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCharLiteral
entryRuleCharLiteral 
:
{ before(grammarAccess.getCharLiteralRule()); }
	 ruleCharLiteral
{ after(grammarAccess.getCharLiteralRule()); } 
	 EOF 
;

// Rule CharLiteral
ruleCharLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCharLiteralAccess().getValueAssignment()); }
(rule__CharLiteral__ValueAssignment)
{ after(grammarAccess.getCharLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral 
:
{ before(grammarAccess.getNumberLiteralRule()); }
	 ruleNumberLiteral
{ after(grammarAccess.getNumberLiteralRule()); } 
	 EOF 
;

// Rule NumberLiteral
ruleNumberLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberLiteralAccess().getValueAssignment()); }
(rule__NumberLiteral__ValueAssignment)
{ after(grammarAccess.getNumberLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment()); }
(rule__BooleanLiteral__ValueAssignment)
{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyReference
entryRulePropertyReference 
:
{ before(grammarAccess.getPropertyReferenceRule()); }
	 rulePropertyReference
{ after(grammarAccess.getPropertyReferenceRule()); } 
	 EOF 
;

// Rule PropertyReference
rulePropertyReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyReferenceAccess().getReferenceAssignment()); }
(rule__PropertyReference__ReferenceAssignment)
{ after(grammarAccess.getPropertyReferenceAccess().getReferenceAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard 
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
(rule__QualifiedNameWithWildcard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBOOLEAN
entryRuleBOOLEAN 
:
{ before(grammarAccess.getBOOLEANRule()); }
	 ruleBOOLEAN
{ after(grammarAccess.getBOOLEANRule()); } 
	 EOF 
;

// Rule BOOLEAN
ruleBOOLEAN
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBOOLEANAccess().getAlternatives()); }
(rule__BOOLEAN__Alternatives)
{ after(grammarAccess.getBOOLEANAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNUMBER
entryRuleNUMBER 
:
{ before(grammarAccess.getNUMBERRule()); }
	 ruleNUMBER
{ after(grammarAccess.getNUMBERRule()); } 
	 EOF 
;

// Rule NUMBER
ruleNUMBER
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNUMBERAccess().getAlternatives()); }
(rule__NUMBER__Alternatives)
{ after(grammarAccess.getNUMBERAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule TypeStorageModifier
ruleTypeStorageModifier
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeStorageModifierAccess().getAlternatives()); }
(rule__TypeStorageModifier__Alternatives)
{ after(grammarAccess.getTypeStorageModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule EntityRelationshipKind
ruleEntityRelationshipKind
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityRelationshipKindAccess().getAlternatives()); }
(rule__EntityRelationshipKind__Alternatives)
{ after(grammarAccess.getEntityRelationshipKindAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule PropertyStorageModifier
rulePropertyStorageModifier
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStorageModifierAccess().getAlternatives()); }
(rule__PropertyStorageModifier__Alternatives)
{ after(grammarAccess.getPropertyStorageModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__NamedType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTypeAccess().getComplexTypeParserRuleCall_0()); }
	ruleComplexType
{ after(grammarAccess.getNamedTypeAccess().getComplexTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNamedTypeAccess().getPrimitiveTypeParserRuleCall_1()); }
	rulePrimitiveType
{ after(grammarAccess.getNamedTypeAccess().getPrimitiveTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationTypeReference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationTypeReferenceAccess().getTypeReferenceParserRuleCall_0()); }
	ruleTypeReference
{ after(grammarAccess.getDeclarationTypeReferenceAccess().getTypeReferenceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDeclarationTypeReferenceAccess().getCollectionTypeParserRuleCall_1()); }
	ruleCollectionType
{ after(grammarAccess.getDeclarationTypeReferenceAccess().getCollectionTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDeclarationTypeReferenceAccess().getMapTypeParserRuleCall_2()); }
	ruleMapType
{ after(grammarAccess.getDeclarationTypeReferenceAccess().getMapTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeAccess().getEnumerationTypeParserRuleCall_0()); }
	ruleEnumerationType
{ after(grammarAccess.getComplexTypeAccess().getEnumerationTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getComplexTypeAccess().getEntityTypeParserRuleCall_1()); }
	ruleEntityType
{ after(grammarAccess.getComplexTypeAccess().getEntityTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_0()); }
	ruleBooleanLiteral
{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_1()); }
	ruleNumberLiteral
{ after(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getCharLiteralParserRuleCall_2()); }
	ruleCharLiteral
{ after(grammarAccess.getLiteralAccess().getCharLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_3()); }
	ruleStringLiteral
{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getPropertyReferenceParserRuleCall_4()); }
	rulePropertyReference
{ after(grammarAccess.getLiteralAccess().getPropertyReferenceParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLEANAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getBOOLEANAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getBOOLEANAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getBOOLEANAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBERAccess().getGroup_0()); }
(rule__NUMBER__Group_0__0)
{ after(grammarAccess.getNUMBERAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNUMBERAccess().getGroup_1()); }
(rule__NUMBER__Group_1__0)
{ after(grammarAccess.getNUMBERAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBERAccess().getPlusSignKeyword_0_0_0()); }

	'+' 

{ after(grammarAccess.getNUMBERAccess().getPlusSignKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getNUMBERAccess().getHyphenMinusKeyword_0_0_1()); }

	'-' 

{ after(grammarAccess.getNUMBERAccess().getHyphenMinusKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeStorageModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeStorageModifierAccess().getSTORABLEEnumLiteralDeclaration_0()); }
(	' storable' 
)
{ after(grammarAccess.getTypeStorageModifierAccess().getSTORABLEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTypeStorageModifierAccess().getEMBEDDABLEEnumLiteralDeclaration_1()); }
(	'embeddable' 
)
{ after(grammarAccess.getTypeStorageModifierAccess().getEMBEDDABLEEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityRelationshipKind__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityRelationshipKindAccess().getUNIQUEEnumLiteralDeclaration_0()); }
(	'unique' 
)
{ after(grammarAccess.getEntityRelationshipKindAccess().getUNIQUEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getEntityRelationshipKindAccess().getMANYEnumLiteralDeclaration_1()); }
(	'many' 
)
{ after(grammarAccess.getEntityRelationshipKindAccess().getMANYEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyStorageModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyStorageModifierAccess().getVARIABLEEnumLiteralDeclaration_0()); }
(	'var' 
)
{ after(grammarAccess.getPropertyStorageModifierAccess().getVARIABLEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPropertyStorageModifierAccess().getVALUEEnumLiteralDeclaration_1()); }
(	'val' 
)
{ after(grammarAccess.getPropertyStorageModifierAccess().getVALUEEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getPropertyStorageModifierAccess().getTRANSIENTEnumLiteralDeclaration_2()); }
(	'transient' 
)
{ after(grammarAccess.getPropertyStorageModifierAccess().getTRANSIENTEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getModelAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
(rule__Model__NameAssignment_1)
{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsAssignment_2()); }
(rule__Model__ImportsAssignment_2)*
{ after(grammarAccess.getModelAccess().getImportsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getTypesAssignment_3()); }
(rule__Model__TypesAssignment_3)*
{ after(grammarAccess.getModelAccess().getTypesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CollectionType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionType__Group__0__Impl
	rule__CollectionType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeAccess().getReferenceAssignment_0()); }
(rule__CollectionType__ReferenceAssignment_0)
{ after(grammarAccess.getCollectionTypeAccess().getReferenceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionType__Group__1__Impl
	rule__CollectionType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getCollectionTypeAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionType__Group__2__Impl
	rule__CollectionType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeAccess().getSizeAssignment_2()); }
(rule__CollectionType__SizeAssignment_2)?
{ after(grammarAccess.getCollectionTypeAccess().getSizeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CollectionType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getCollectionTypeAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MapType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapType__Group__0__Impl
	rule__MapType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapTypeAccess().getReferenceAssignment_0()); }
(rule__MapType__ReferenceAssignment_0)
{ after(grammarAccess.getMapTypeAccess().getReferenceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapType__Group__1__Impl
	rule__MapType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapTypeAccess().getLessThanSignKeyword_1()); }

	'<' 

{ after(grammarAccess.getMapTypeAccess().getLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapType__Group__2__Impl
	rule__MapType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapTypeAccess().getGroup_2()); }
(rule__MapType__Group_2__0)
{ after(grammarAccess.getMapTypeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapType__Group__3__Impl
	rule__MapType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_3()); }

	'[' 

{ after(grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapType__Group__4__Impl
	rule__MapType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapTypeAccess().getSizeAssignment_4()); }
(rule__MapType__SizeAssignment_4)?
{ after(grammarAccess.getMapTypeAccess().getSizeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__MapType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapType__Group_2__0__Impl
	rule__MapType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapTypeAccess().getMapTypeAssignment_2_0()); }
(rule__MapType__MapTypeAssignment_2_0)
{ after(grammarAccess.getMapTypeAccess().getMapTypeAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapTypeAccess().getGreaterThanSignKeyword_2_1()); }

	'>' 

{ after(grammarAccess.getMapTypeAccess().getGreaterThanSignKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumerationType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationType__Group__0__Impl
	rule__EnumerationType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationTypeAccess().getEnumKeyword_0()); }

	'enum' 

{ after(grammarAccess.getEnumerationTypeAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationType__Group__1__Impl
	rule__EnumerationType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationTypeAccess().getNameAssignment_1()); }
(rule__EnumerationType__NameAssignment_1)
{ after(grammarAccess.getEnumerationTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationType__Group__2__Impl
	rule__EnumerationType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationTypeAccess().getGroup_2()); }
(rule__EnumerationType__Group_2__0)?
{ after(grammarAccess.getEnumerationTypeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationType__Group__3__Impl
	rule__EnumerationType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationTypeAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getEnumerationTypeAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationType__Group__4__Impl
	rule__EnumerationType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationTypeAccess().getLiteralsAssignment_4()); }
(rule__EnumerationType__LiteralsAssignment_4)
{ after(grammarAccess.getEnumerationTypeAccess().getLiteralsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationType__Group__5__Impl
	rule__EnumerationType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationTypeAccess().getGroup_5()); }
(rule__EnumerationType__Group_5__0)*
{ after(grammarAccess.getEnumerationTypeAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationType__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationTypeAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getEnumerationTypeAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__EnumerationType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationType__Group_2__0__Impl
	rule__EnumerationType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationTypeAccess().getColonKeyword_2_0()); }

	':' 

{ after(grammarAccess.getEnumerationTypeAccess().getColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationTypeAccess().getParentAssignment_2_1()); }
(rule__EnumerationType__ParentAssignment_2_1)
{ after(grammarAccess.getEnumerationTypeAccess().getParentAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumerationType__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationType__Group_5__0__Impl
	rule__EnumerationType__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationTypeAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getEnumerationTypeAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationType__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationType__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationTypeAccess().getLiteralsAssignment_5_1()); }
(rule__EnumerationType__LiteralsAssignment_5_1)
{ after(grammarAccess.getEnumerationTypeAccess().getLiteralsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EntityType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityType__Group__0__Impl
	rule__EntityType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getEntityKeyword_0()); }

	'entity' 

{ after(grammarAccess.getEntityTypeAccess().getEntityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityType__Group__1__Impl
	rule__EntityType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getStorageModifierAssignment_1()); }
(rule__EntityType__StorageModifierAssignment_1)?
{ after(grammarAccess.getEntityTypeAccess().getStorageModifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityType__Group__2__Impl
	rule__EntityType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getNameAssignment_2()); }
(rule__EntityType__NameAssignment_2)
{ after(grammarAccess.getEntityTypeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityType__Group__3__Impl
	rule__EntityType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getGroup_3()); }
(rule__EntityType__Group_3__0)?
{ after(grammarAccess.getEntityTypeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityType__Group__4__Impl
	rule__EntityType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getEntityTypeAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityType__Group__5__Impl
	rule__EntityType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getPropertiesAssignment_5()); }
(rule__EntityType__PropertiesAssignment_5)*
{ after(grammarAccess.getEntityTypeAccess().getPropertiesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityType__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getEntityTypeAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__EntityType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityType__Group_3__0__Impl
	rule__EntityType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getColonKeyword_3_0()); }

	':' 

{ after(grammarAccess.getEntityTypeAccess().getColonKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getParentAssignment_3_1()); }
(rule__EntityType__ParentAssignment_3_1)
{ after(grammarAccess.getEntityTypeAccess().getParentAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Property__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getStorageModifierAssignment_0()); }
(rule__Property__StorageModifierAssignment_0)?
{ after(grammarAccess.getPropertyAccess().getStorageModifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__1__Impl
	rule__Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getTypeAssignment_1()); }
(rule__Property__TypeAssignment_1)
{ after(grammarAccess.getPropertyAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__2__Impl
	rule__Property__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getNameAssignment_2()); }
(rule__Property__NameAssignment_2)
{ after(grammarAccess.getPropertyAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__3__Impl
	rule__Property__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getRelationshipAssignment_3()); }
(rule__Property__RelationshipAssignment_3)?
{ after(grammarAccess.getPropertyAccess().getRelationshipAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__4__Impl
	rule__Property__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getGroup_4()); }
(rule__Property__Group_4__0)?
{ after(grammarAccess.getPropertyAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__5__Impl
	rule__Property__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getGroup_5()); }
(rule__Property__Group_5__0)?
{ after(grammarAccess.getPropertyAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getGroup_6()); }
(rule__Property__Group_6__0)?
{ after(grammarAccess.getPropertyAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Property__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_4__0__Impl
	rule__Property__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getOrderKeyword_4_0()); }

	'order' 

{ after(grammarAccess.getPropertyAccess().getOrderKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getOrderByAssignment_4_1()); }
(rule__Property__OrderByAssignment_4_1)
{ after(grammarAccess.getPropertyAccess().getOrderByAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Property__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_5__0__Impl
	rule__Property__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getKeyKeyword_5_0()); }

	'key' 

{ after(grammarAccess.getPropertyAccess().getKeyKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getMapKeyAssignment_5_1()); }
(rule__Property__MapKeyAssignment_5_1)
{ after(grammarAccess.getPropertyAccess().getMapKeyAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Property__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_6__0__Impl
	rule__Property__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getEqualsSignKeyword_6_0()); }

	'=' 

{ after(grammarAccess.getPropertyAccess().getEqualsSignKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getLiteralAssignment_6_1()); }
(rule__Property__LiteralAssignment_6_1)
{ after(grammarAccess.getPropertyAccess().getLiteralAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EntityRelationship__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityRelationship__Group__0__Impl
	rule__EntityRelationship__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityRelationship__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityRelationshipAccess().getEntityRelationshipAction_0()); }
(

)
{ after(grammarAccess.getEntityRelationshipAccess().getEntityRelationshipAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityRelationship__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityRelationship__Group__1__Impl
	rule__EntityRelationship__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityRelationship__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityRelationshipAccess().getKindAssignment_1()); }
(rule__EntityRelationship__KindAssignment_1)
{ after(grammarAccess.getEntityRelationshipAccess().getKindAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityRelationship__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityRelationship__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityRelationship__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityRelationshipAccess().getMappedByAssignment_2()); }
(rule__EntityRelationship__MappedByAssignment_2)?
{ after(grammarAccess.getEntityRelationshipAccess().getMappedByAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MappedByReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappedByReference__Group__0__Impl
	rule__MappedByReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappedByReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappedByReferenceAccess().getBaseAssignment_0()); }
(rule__MappedByReference__BaseAssignment_0)
{ after(grammarAccess.getMappedByReferenceAccess().getBaseAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappedByReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappedByReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappedByReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappedByReferenceAccess().getGroup_1()); }
(rule__MappedByReference__Group_1__0)?
{ after(grammarAccess.getMappedByReferenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MappedByReference__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappedByReference__Group_1__0__Impl
	rule__MappedByReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappedByReference__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappedByReferenceAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getMappedByReferenceAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappedByReference__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappedByReference__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappedByReference__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappedByReferenceAccess().getPathAssignment_1_1()); }
(rule__MappedByReference__PathAssignment_1_1)
{ after(grammarAccess.getMappedByReferenceAccess().getPathAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup_1()); }
(rule__QualifiedNameWithWildcard__Group_1__0)?
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildcard__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group_1__0__Impl
	rule__QualifiedNameWithWildcard__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_1_1()); }

	'*' 

{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NUMBER__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NUMBER__Group_0__0__Impl
	rule__NUMBER__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBERAccess().getAlternatives_0_0()); }
(rule__NUMBER__Alternatives_0_0)?
{ after(grammarAccess.getNUMBERAccess().getAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NUMBER__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NUMBER__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_0_1()); }
	RULE_INT
{ after(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NUMBER__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NUMBER__Group_1__0__Impl
	rule__NUMBER__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1_0()); }
	RULE_INT
{ after(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NUMBER__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NUMBER__Group_1__1__Impl
	rule__NUMBER__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBERAccess().getFullStopKeyword_1_1()); }

	'.' 

{ after(grammarAccess.getNUMBERAccess().getFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NUMBER__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NUMBER__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1_2()); }
	RULE_INT
{ after(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getModelAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ImportsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_2_0()); }
	ruleImport{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__TypesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getTypesComplexTypeParserRuleCall_3_0()); }
	ruleComplexType{ after(grammarAccess.getModelAccess().getTypesComplexTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	ruleQualifiedNameWithWildcard{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__ReferenceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeAccess().getReferenceTypeReferenceParserRuleCall_0_0()); }
	ruleTypeReference{ after(grammarAccess.getCollectionTypeAccess().getReferenceTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__SizeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionTypeAccess().getSizeINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getCollectionTypeAccess().getSizeINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__ReferenceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapTypeAccess().getReferenceTypeReferenceParserRuleCall_0_0()); }
	ruleTypeReference{ after(grammarAccess.getMapTypeAccess().getReferenceTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__MapTypeAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapTypeAccess().getMapTypeTypeReferenceParserRuleCall_2_0_0()); }
	ruleTypeReference{ after(grammarAccess.getMapTypeAccess().getMapTypeTypeReferenceParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__SizeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapTypeAccess().getSizeINTTerminalRuleCall_4_0()); }
	RULE_INT{ after(grammarAccess.getMapTypeAccess().getSizeINTTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__ReferenceAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getReferenceNamedTypeCrossReference_0()); }
(
{ before(grammarAccess.getTypeReferenceAccess().getReferenceNamedTypeIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeReferenceAccess().getReferenceNamedTypeIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getTypeReferenceAccess().getReferenceNamedTypeCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getPrimitiveTypeAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEnumerationTypeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__ParentAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationTypeAccess().getParentEnumerationTypeCrossReference_2_1_0()); }
(
{ before(grammarAccess.getEnumerationTypeAccess().getParentEnumerationTypeQualifiedNameParserRuleCall_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getEnumerationTypeAccess().getParentEnumerationTypeQualifiedNameParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getEnumerationTypeAccess().getParentEnumerationTypeCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__LiteralsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationTypeAccess().getLiteralsEnumerationLiteralParserRuleCall_4_0()); }
	ruleEnumerationLiteral{ after(grammarAccess.getEnumerationTypeAccess().getLiteralsEnumerationLiteralParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__LiteralsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationTypeAccess().getLiteralsEnumerationLiteralParserRuleCall_5_1_0()); }
	ruleEnumerationLiteral{ after(grammarAccess.getEnumerationTypeAccess().getLiteralsEnumerationLiteralParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationLiteralAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getEnumerationLiteralAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__StorageModifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getStorageModifierTypeStorageModifierEnumRuleCall_1_0()); }
	ruleTypeStorageModifier{ after(grammarAccess.getEntityTypeAccess().getStorageModifierTypeStorageModifierEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getEntityTypeAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__ParentAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getParentComplexTypeCrossReference_3_1_0()); }
(
{ before(grammarAccess.getEntityTypeAccess().getParentComplexTypeQualifiedNameParserRuleCall_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getEntityTypeAccess().getParentComplexTypeQualifiedNameParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getEntityTypeAccess().getParentComplexTypeCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__PropertiesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getPropertiesPropertyParserRuleCall_5_0()); }
	ruleProperty{ after(grammarAccess.getEntityTypeAccess().getPropertiesPropertyParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__StorageModifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getStorageModifierPropertyStorageModifierEnumRuleCall_0_0()); }
	rulePropertyStorageModifier{ after(grammarAccess.getPropertyAccess().getStorageModifierPropertyStorageModifierEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getTypeDeclarationTypeReferenceParserRuleCall_1_0()); }
	ruleDeclarationTypeReference{ after(grammarAccess.getPropertyAccess().getTypeDeclarationTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__RelationshipAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getRelationshipEntityRelationshipParserRuleCall_3_0()); }
	ruleEntityRelationship{ after(grammarAccess.getPropertyAccess().getRelationshipEntityRelationshipParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__OrderByAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getOrderByPropertyReferenceParserRuleCall_4_1_0()); }
	rulePropertyReference{ after(grammarAccess.getPropertyAccess().getOrderByPropertyReferenceParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__MapKeyAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getMapKeyPropertyReferenceParserRuleCall_5_1_0()); }
	rulePropertyReference{ after(grammarAccess.getPropertyAccess().getMapKeyPropertyReferenceParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__LiteralAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getLiteralLiteralParserRuleCall_6_1_0()); }
	ruleLiteral{ after(grammarAccess.getPropertyAccess().getLiteralLiteralParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityRelationship__KindAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityRelationshipAccess().getKindEntityRelationshipKindEnumRuleCall_1_0()); }
	ruleEntityRelationshipKind{ after(grammarAccess.getEntityRelationshipAccess().getKindEntityRelationshipKindEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityRelationship__MappedByAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityRelationshipAccess().getMappedByMappedByReferenceParserRuleCall_2_0()); }
	ruleMappedByReference{ after(grammarAccess.getEntityRelationshipAccess().getMappedByMappedByReferenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MappedByReference__BaseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappedByReferenceAccess().getBasePropertyCrossReference_0_0()); }
(
{ before(grammarAccess.getMappedByReferenceAccess().getBasePropertyIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getMappedByReferenceAccess().getBasePropertyIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getMappedByReferenceAccess().getBasePropertyCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MappedByReference__PathAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappedByReferenceAccess().getPathMappedByReferenceParserRuleCall_1_1_0()); }
	ruleMappedByReference{ after(grammarAccess.getMappedByReferenceAccess().getPathMappedByReferenceParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CharLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharLiteralAccess().getValueCHARACTERTerminalRuleCall_0()); }
	RULE_CHARACTER{ after(grammarAccess.getCharLiteralAccess().getValueCHARACTERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getValueNUMBERParserRuleCall_0()); }
	ruleNUMBER{ after(grammarAccess.getNumberLiteralAccess().getValueNUMBERParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueBOOLEANParserRuleCall_0()); }
	ruleBOOLEAN{ after(grammarAccess.getBooleanLiteralAccess().getValueBOOLEANParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__ReferenceAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyReferenceAccess().getReferencePropertyCrossReference_0()); }
(
{ before(grammarAccess.getPropertyReferenceAccess().getReferencePropertyIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getPropertyReferenceAccess().getReferencePropertyIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getPropertyReferenceAccess().getReferencePropertyCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_CHARACTER : '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\''))) '\'';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


